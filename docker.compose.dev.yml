version: '3.8'

services:
    postgres:
        image: postgres:15-alpine
        container_name: malina_postgres
        restart: unless-stopped
        environment:
            POSTGRES_DB: Malina_CORP_FOR_FUN
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./init-db:/docker-entrypoint-initdb.d
        ports:
            - '12000:5432'
        networks:
            - malina_network
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres -d Malina_CORP_FOR_FUN']
            interval: 10s
            timeout: 5s
            retries: 5

    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: malina_app
        restart: unless-stopped
        environment:
            NODE_ENV: production
            DATABASE_URL: postgres://postgres:postgres@postgres:5432/Malina_CORP_FOR_FUN
            PRIVATE_KEY: your_private_key_here
            PUBLIC_KEY: your_public_key_here
            REFRESH_TOKEN_SECRET: your_refresh_token_secret_here
            COOKIE_SECRET: your_cookie_secret
            JWT_EXPIRATION_ACCESS_MS: 3600000
            JWT_EXPIRATION_REFRESH_MS: 604800000
            PORT: 3000
            GOOGLE_CLIENT_ID: google_client_id_here
            GOOGLE_CLIENT_SECRET: google_client_secret_here_haha
            GOOGLE_AUTH_REDIRECT_URI: http://localhost:3000/auth/google/redirect
        ports:
            - '3000:3000'
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - malina_network
        volumes:
            - ./logs:/app/logs
            - ./uploads:/app/uploads
        healthcheck:
            test:
                [
                    'CMD',
                    'wget',
                    '--no-verbose',
                    '--tries=1',
                    '--spider',
                    'http://localhost:3000/health',
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    redis:
        image: redis:7-alpine
        container_name: malina_redis
        restart: unless-stopped
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        networks:
            - malina_network
        command: redis-server --appendonly yes
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 10s
            timeout: 5s
            retries: 3

networks:
    malina_network:
        driver: bridge

volumes:
    postgres_data:
        driver: local
    redis_data:
        driver: local
